Interesting Blueprints:
Game/_Game/Blueprints/ItemPickup.uasset
Game/_Game/Blueprints/PaintCan.uasset
Game/_Game/Blueprints/ScrapCreatePoint.uasset
Game/_Game/Blueprints/UpgradesMenu.uasset
Game/_Game/Blueprints/MissionSpecificBlueprints/Pages_PageCount.uasset
Game/_GAME/Blueprints/ItemDataTable.uasset
Game/_GAME/Blueprints/NPC.uasset => MissionID
Game/_GAME/Blueprints/MissionsDataTable.uasset
Game/_GAME/Blueprints/SubtitlesStruct.uasset
Game/EasySave/easySaveObject.uasset
Game/_GAME/Blueprints/GunStatsDataTable.uasset

Possibly important BP/functions (possible whitespace in function names):
IDamageInterface_C: Damage(float DamageApplied, float SlowingMultiplier, class UActorComponent* HitComponent);
DeathScreen_C
ABP_NMCharacter_C
UNotification_C
APhotorealistic_Island_C
PlayerTrain: GunHook | GunHook<1..3> | Teal to Grey (paint cans)
TrainUpgradeStats
UpgradesMenu
MainUI
ALighthouse_Details_C

Found bugs:
> In Qwerty, the console does not trigger, the keys "~" and "`" should be mapped too
> The map keeps re-placing the marker every time a drawing_page is picked after mission start

Tpm coordinates for Start Camp level bounding box:
X=23722.865 Y=53091.031 Z=11027.695
X=25542.385 Y=53831.328 Z=11064.331
X=23080.998 Y=54994.715 Z=10971.831

TODO:
> Rename all scraps to precise where to find them (Ex: "Scraps [...]" 8 -> "Scraps [...] close to [...]")
> Fix the "quantum" scraps (base game bug) and do not respawn all the scraps
> Randomize the railway switches
> Consider all scraps in a region as 1 location (yaml reliant) and keep the collected scraps in inventory
> Name with whitespaces are not allowed in the current code, a fix could be a use of '\"'
> Make the player start with a random weapon (among the 4 weapons)
> Make some checks to enable the train upgrades
> Randomize the access to the train
> Apply a passive effect or hint for Paint Cans
> Give an option to split the remote explosives
> Implement the puzzle in the 2nd mine with the hidden gear to open the harrow
> Set the number of required scraps to repair the train
> Add traps ("Unscrap" remove 5 scraps from inventory, "Derailed" lower the train HP by 30, ...)
> Change blips on the radar by the AP logo
> Show if the blip is above/below the player
> Add a Yaml option to enable the end if the bombs are on the bridge (and add invisible collision on the prism)
> Change the create_item() management by a use of dict in the Archipelago randomization logic
> Implement a scraps tracker by region, always displayed in the UI/map

Ideas:
> Add an option to lock some regions behind "forcefields" to split sphere 1 to more spheres
> Scale the encounter frequency against Charles
> Randomize the loot crates (force their spawn)
> DeathDuck has an untextured eye, the Archipelago logo could be added to it
> Give an option to see randomized items or not (replaced by DeathDuck)
> Update "DeathDuck" to give multiworld items and hints

End mission saves to read:
Common logic: 1 = mission started, 2 = new map marker, 3 = map marker checked, 4 = mission finished
    Junkyard (Junkyard_Tablet): 3.1 = end item found
    Swamp (Swamp_Fish): 3.1 = end item found
    Pickles (Pickles_Jar): 3.1 = end item found
    Canyon (Canyon_BlueBox): 3.1 = end item found
    Pages (Pages_Drawing x8): 3.1 = end item found
    Port (Port_Journal): 3.1 = end item found
    Boomer (Boomer_Rockets): 3.1 = out bunker door broken, 3.2 = in bunker door broken, 3.3 = end item found
    Towers (Towers_Files): 3.1 = end item found
    Lighthouse: 3.1 = end item found
    Bridge: 3.1 = end item found
    TonyBarn
    Tutorial2
    Mine1
    Bugspray: 3.1 = end item found
    Mine2
    Bob
    Mine3

All saves can be bound at:
    %LOCALAPPDATA%\Obscure\Saved\SaveGames\

Archipelago output:
    D:\ProgramData\Archipelago\output\

APCpp build (can change):
    D:\UEProject\CCCharles-Random\ModSrc\Intermediates\.packages\a\apcpp\latest\cache\build_b1caf5ae\Release\

Hook code example:
    // Get the parameters in order (example)
    FString* param1 = Stack.Node()->GetPropertyByName(STR("ParamHook1"))->ContainerPtrToValuePtr<FString>(Stack.Locals());
    int64_t* param2 = Stack.Node()->GetPropertyByName(STR("ParamHook2"))->ContainerPtrToValuePtr<int64_t>(Stack.Locals());
    Output::send<LogLevel::Verbose>(STR("{}"), param1->GetCharArray());
    Output::send<LogLevel::Verbose>(STR("{}"), *param2);

Global pickable items name:
- Loot boxes => ScrapCratePoint
- Scraps inside loot boxes => ItemPickup
- Scraps => ItemPickup
- Mission Items (talkable characters) => NPC<Name>

Secret Gear place :
LeverBox_3 Mine2_Interior2 (X=-54399.375 Y=-98903.109 Z=8848.902)

Reproduced game features:
Player distance interaction:
    player_distance_interaction = 290
Local scales of guns collisions:
    FlameThrower X=0.432 Y=0.732 Z=1.50
    RocketLauncher X=0.432 Y=0.712 Z=1.508
    RangeGun X=0.237 Y=0.789 Z=2.684

To get a working local world:
1) Package the <apworld>/ folder (here cccharles) and name it <apworld>.apworld (the archipelago logo should be displayed)
2) Double-click the <apworld>.apworld package to automatically install the world locally
3) Launch the Archipelago launcher and click "Generate Template Options"
4) Put the generated template from Archipelago/Players/Templates/ to Archipelago/Players/ and edit it manually
5) In the Archipelago launcher, click "Generate" to setup a game with the yaml in the Archipelago/ouput/ folder
6) The game can now be hosted with "Host" in the Archipelago launcher by using the generated game in Archipelago/output/

All Item Names:
01_KeyTony
Mine1_Key
05_Scraps
Mine1_Egg (ItemPickup14_2)
Mine2_Egg (Mine2_Egg)
Mine2_Gear (unused)
Mine2_Key
Mine3_Egg (Mine3_EggPickup)
Mine3_Key
Tutorial2_Key
Boomer_Dynamite (Boomer_DynamitePickup)
Boomer_Rockets (Boomer_RocketsPickup)
Bob_BobPiece
Bob_Key (ItemPickup29_0)
Canyon_BlueBox (Canyon_BlueBoxPickup)
Lighthouse_Breaker (ItemPickup13_2 ItemPickup14 ItemPickup16 ItemPickup17)
Port_Journal (Port_Journal_Pickup)
Pages_Drawing (Pages_Drawing<1...8>)
Towers_Files (Towers_Files_Pickup)
Junkyard_LockPicks
Junkyard_Tablet (Junkyard_TabletPickup)
Swamp_Fish (Swamp_FishPickup)
Pickles_Jar (Pickles_Pickup)
Train_Key
Bridge_Dynamite
Boss_ShrineKey
